// This Pine Script® code is subject to the terms of the Mozilla Public License 2.0 at https://mozilla.org/MPL/2.0/
// © AlphabotsAI
//@version=5
strategy("MACD/RSI Trend Strategy", overlay=true, initial_capital=100000, default_qty_type=strategy.percent_of_equity, default_qty_value=10)

// === Input Parameters ===
macdFast = input.int(12, "MACD Fast Length")
macdSlow = input.int(26, "MACD Slow Length")
macdSignal = input.int(9, "MACD Signal Length")
rsiPeriod = input.int(14, "RSI Period")
maFastPeriod = input.int(50, "Fast MA Period")
maSlowPeriod = input.int(200, "Slow MA Period")
symbolName = input.string("NSE:NIFTY25APRFUT", "Symbol Name")
segment = input.string("FUT", "Segment", options=["FUT", "EQ"])
tpPercent = input.float(1.5, "Take Profit %", step=0.1)
slPercent = input.float(0.5, "Stop Loss %", step=0.1)

// === Indicator Calculations ===
[macdLine, signalLine, histLine] = ta.macd(close, macdFast, macdSlow, macdSignal)
rsiValue = ta.rsi(close, rsiPeriod)
maFast = ta.sma(close, maFastPeriod)
maSlow = ta.sma(close, maSlowPeriod)

// === Plot Indicators ===
plot(maFast, color=color.blue, title="Fast MA")
plot(maSlow, color=color.red, title="Slow MA")
plot(rsiValue, color=color.purple, title="RSI", style=plot.style_linebr)

// === JSON Alert Messages ===
longEntryJson = '{"order":[{"type":"ENTRY","quantity":1,"side":"B","ordertype":"MARKET","symbol":"' + symbolName + '","segment":"' + segment + '","product":"N"}]}'
longExitJson = '{"order":[{"type":"EXIT","quantity":1,"side":"S","ordertype":"MARKET","symbol":"' + symbolName + '","segment":"' + segment + '","product":"N"}]}'

shortEntryJson = '{"order":[{"type":"ENTRY","quantity":1,"side":"S","ordertype":"MARKET","symbol":"' + symbolName + '","segment":"' + segment + '","product":"N"}]}'
shortExitJson = '{"order":[{"type":"EXIT","quantity":1,"side":"B","ordertype":"MARKET","symbol":"' + symbolName + '","segment":"' + segment + '","product":"N"}]}'

// === Strategy Logic ===
longCondition = ta.crossover(macdLine, signalLine) and rsiValue > 50 and close > maFast
shortCondition = ta.crossunder(macdLine, signalLine) and rsiValue < 50 and close < maFast

if (longCondition)
    strategy.entry("Long", strategy.long)
    strategy.exit("TP/SL", "Long", limit=close * (1 + tpPercent/100), stop=close * (1 - slPercent/100))
    alert(longEntryJson, alert.freq_once_per_bar_close)
    
if (shortCondition)
    strategy.entry("Short", strategy.short)
    strategy.exit("TP/SL", "Short", limit=close * (1 - tpPercent/100), stop=close * (1 + slPercent/100))
    alert(shortEntryJson, alert.freq_once_per_bar_close)

// === Alert Conditions ===
alertcondition(longCondition, "Long Entry Alert", message=longEntryJson)
alertcondition(shortCondition, "Short Entry Alert", message=shortEntryJson)
alertcondition(strategy.closedtrades > strategy.closedtrades[1], "Auto Exit Alert", message=longExitJson)